
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection:
    // - Authenticated users can read their own profile.
    // - Authenticated users can create their own profile upon signup.
    // - Authenticated users can update their own profile.
    // - Admin users can read any user profile.
    // - Admin users can update any user profile (e.g., change roles - though role changing logic is not yet in app).
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      // Delete typically handled by backend functions or restricted. For now, no direct delete from client.
      allow delete: if false; // Or restrict to admin if needed: get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Notifications collection:
    // - Authenticated users can read broadcast notifications (recipientId is null).
    // - Authenticated users can read private notifications sent to them (recipientId == request.auth.uid).
    // - Admins can create notifications.
    // - No direct client-side update/delete of notifications for now (can be admin-only if needed).
    match /notifications/{notificationId} {
      allow read: if request.auth != null && (resource.data.recipientId == null || resource.data.recipientId == request.auth.uid);
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      // Update/Delete typically more controlled. For now, only admins.
      allow update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
